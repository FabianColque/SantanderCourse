Terraform

by Hashicorp

Automatizar, versionar modelos para arquiteturas para proveedores

Ferramentea IaC Infraestrutura como codigo


******************************

Lifecycle

Write
Plan
Apply

*********************************

Provider

arquivo main.tf

terraform {
  required_providers {
    aws = {
      source = "hashicorp/aws"
      version = "5.53.0"
    }
  }
}

provider "aws" {
  # Configuration options
}

data "aws_ami" "ubuntu" {
  most_recent = true

  filter {
    name   = "name"
    values = ["ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-*"]
  }

  filter {
    name   = "virtualization-type"
    values = ["hvm"]
  }

  owners = ["099720109477"] # Canonical
}

resource "aws_instance" "web" {
  ami           = data.aws_ami.ubuntu.id
  instance_type = "t3.micro"

  tags = {
    Name = "HelloWorld"
  }
}


*************************************************
Modulos

Criacao de recursos

como fazer uma vpc por exemplo

Root Module
  -- Child Modules
  
*************************************************

Boas praticas

Criar 

settings.tf
providers.tf
data.tf
e colocar os modules emcima dos recursos

criar um variables.tf
 - Para colocar variables a serem utilizadas nos arquivos principais
 
variables.tf
    variable "vcp_name" {
        type = string
    }

    variable "instance_name" {
        type = string
    }

enviroment
    terraformsVariables.tf
    
    vcp_name = "Ada-treinamento-..."


terraform fmt => formata os arquivos de boa forma


********************************************************





































